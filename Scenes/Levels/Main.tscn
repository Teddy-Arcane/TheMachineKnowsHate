[gd_scene load_steps=10 format=2]

[ext_resource path="res://Scenes/Scripts/LightFlicker.cs" type="Script" id=1]
[ext_resource path="res://Sounds/camera.wav" type="AudioStream" id=2]
[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/MainUI.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/Scripts/Game.cs" type="Script" id=5]
[ext_resource path="res://Scenes/Components/AudioPlayer.tscn" type="PackedScene" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float screen_width = 1280;
uniform float screen_height = 720;

// Curvature
uniform float BarrelPower =1.1;
// Color bleeding
uniform float color_bleeding = 1.2;
uniform float bleeding_range_x = 3;
uniform float bleeding_range_y = 3;
// Scanline
uniform float lines_distance = 4.0;
uniform float scan_size = 2.0;
uniform float scanline_alpha = 0.9;
uniform float lines_velocity = 30.0;

vec2 distort(vec2 p) 
{
	float angle = p.y / p.x;
	float theta = atan(p.y,p.x);
	float radius = pow(length(p), BarrelPower);
	
	p.x = radius * cos(theta);
	p.y = radius * sin(theta);
	
	return 0.5 * (p + vec2(1.0,1.0));
}

void get_color_bleeding(inout vec4 current_color,inout vec4 color_left){
	current_color = current_color*vec4(color_bleeding,0.5,1.0-color_bleeding,1);
	color_left = color_left*vec4(1.0-color_bleeding,0.5,color_bleeding,1);
}

void get_color_scanline(vec2 uv,inout vec4 c,float time){
	float line_row = floor((uv.y * screen_height/scan_size) + mod(time*lines_velocity, lines_distance));
	float n = 1.0 - ceil((mod(line_row,lines_distance)/lines_distance));
	c = c - n*c*(1.0 - scanline_alpha);
	c.a = 1.0;
}

void fragment()
{
	vec2 xy = SCREEN_UV * 2.0;
	xy.x -= 1.0;
	xy.y -= 1.0;
	
	float d = length(xy);
	if(d < 1.5){
		xy = distort(xy);
	}
	else{
		xy = SCREEN_UV;
	}
	
	float pixel_size_x = 1.0/screen_width*bleeding_range_x;
	float pixel_size_y = 1.0/screen_height*bleeding_range_y;
	vec4 color_left = texture(SCREEN_TEXTURE,xy - vec2(pixel_size_x, pixel_size_y));
	vec4 current_color = texture(SCREEN_TEXTURE,xy);
	get_color_bleeding(current_color,color_left);
	vec4 c = current_color+color_left;
	get_color_scanline(xy,c,TIME);
	COLOR = c;

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/screen_width = 1280.0
shader_param/screen_height = 720.0
shader_param/BarrelPower = 1.0
shader_param/color_bleeding = 0.1
shader_param/bleeding_range_x = 0.0
shader_param/bleeding_range_y = 0.0
shader_param/lines_distance = 4.0
shader_param/scan_size = 2.0
shader_param/scanline_alpha = 0.9
shader_param/lines_velocity = 30.0

[sub_resource type="Environment" id=3]
background_mode = 4
background_energy = 2.46
ambient_light_color = Color( 0.921569, 0.00784314, 0.00784314, 1 )
glow_enabled = true
glow_levels/1 = true
glow_levels/2 = true
glow_levels/4 = true
glow_levels/6 = true
glow_levels/7 = true
glow_intensity = 0.19
glow_strength = 0.45
glow_bicubic_upscale = true
glow_high_quality = true

[node name="GameWorld" type="Node2D"]
script = ExtResource( 5 )

[node name="Camera2D" type="Camera2D" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="Camera2D"]
layer = 2
follow_viewport_enable = true

[node name="ColorRect" type="ColorRect" parent="Camera2D/CanvasLayer"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 1, 1, 1, 0 )

[node name="LightFlicker" type="CanvasModulate" parent="."]
color = Color( 0, 0, 0, 1 )
script = ExtResource( 1 )

[node name="FlashTimer" type="Timer" parent="LightFlicker"]
wait_time = 10.0

[node name="FlashSoundTimer" type="Timer" parent="LightFlicker"]
wait_time = 9.5

[node name="LightsOnTimer" type="Timer" parent="LightFlicker"]
wait_time = 2.0
one_shot = true

[node name="LevelStartTimer" type="Timer" parent="LightFlicker"]
wait_time = 2.0
one_shot = true
autostart = true

[node name="Flash" type="AudioStreamPlayer" parent="LightFlicker"]
stream = ExtResource( 2 )

[node name="AudioPlayer" parent="LightFlicker" instance=ExtResource( 6 )]
position = Vector2( 20, 0 )

[node name="MainUI" parent="." instance=ExtResource( 4 )]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 3 )

[node name="Player" parent="." instance=ExtResource( 3 )]
_speed = 230.0
_jumpVelocity = 650.0
_gravity = 1200.0
_sprintModifier = 1.5
_sprintLightRadius = 0.3
_fallDamageThresholdVelocity = 1500.0
_gruntThreshold = 750.0
_downwardGravityModifier = 2.0

[node name="AudioPlayer" parent="." instance=ExtResource( 6 )]

[connection signal="timeout" from="LightFlicker/FlashTimer" to="LightFlicker" method="_on_Timer_timeout"]
[connection signal="timeout" from="LightFlicker/LightsOnTimer" to="LightFlicker" method="_on_LightsOnTimer_timeout"]
[connection signal="timeout" from="LightFlicker/LevelStartTimer" to="LightFlicker" method="_on_LevelStartTimer_timeout"]
