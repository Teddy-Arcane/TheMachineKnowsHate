[gd_scene load_steps=12 format=2]

[ext_resource path="res://Sprites/Props/glass.png" type="Texture" id=1]
[ext_resource path="res://Scenes/Scripts/FallingPlatform.cs" type="Script" id=2]
[ext_resource path="res://Scenes/Components/AudioPlayer.tscn" type="PackedScene" id=4]

[sub_resource type="RectangleShape2D" id=16]
extents = Vector2( 31, 31 )

[sub_resource type="Shader" id=20]
code = "shader_type canvas_item;

uniform sampler2D noiseTexture;
uniform float noiseTiling = 2;
uniform float dissolveAmount : hint_range(0, 1);
uniform float edgeThickness = 0.01;
uniform vec4 edgeColor : hint_color;

void fragment()
{
	vec4 originalTexture = texture(TEXTURE, UV);
	
	vec4 dissolveNoise = texture(noiseTexture, UV * noiseTiling);
	
	// remapping to account for edge thickness
	float remappedDissolve = dissolveAmount * (1.01  + edgeThickness) - edgeThickness;

	vec4 step1 = step(remappedDissolve, dissolveNoise); // step function turns all values in the noise texture below dissolve amount to black and above to white
	vec4 step2 = step(remappedDissolve + edgeThickness, dissolveNoise);
	
	vec4 edgeArea = step1 - step2; // difference between results of two step functions is the edge area
	edgeArea.a = 1.; 
	
	edgeArea.a *= originalTexture.a;// setting the colored parts that are outside of the original texture to be transparent
	originalTexture.a *= step1.r;// making the parts lower than the dissolveAmount transparent
	
	// coloring the edge in separate variable to keep the rgb info that defines edge area in order to allow different edge colors to work properly
	vec4 coloredEdge = edgeArea * edgeColor;
	
	//combining colors based on the edge area
	vec4 combinedColor = mix(originalTexture, coloredEdge, edgeArea.r);
	COLOR = combinedColor;
}"

[sub_resource type="OpenSimplexNoise" id=22]
seed = 324324
octaves = 9
period = 91.3
persistence = 0.671
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=23]
width = 64
height = 64
noise = SubResource( 22 )

[sub_resource type="ShaderMaterial" id=21]
shader = SubResource( 20 )
shader_param/noiseTiling = 2.0
shader_param/dissolveAmount = 0.0
shader_param/edgeThickness = 0.01
shader_param/edgeColor = null
shader_param/noiseTexture = SubResource( 23 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 1 )
region = Rect2( 64, 0, 64, 64 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 64, 64 )

[sub_resource type="SpriteFrames" id=19]
animations = [ {
"frames": [ SubResource( 17 ) ],
"loop": true,
"name": "crack",
"speed": 5.0
}, {
"frames": [ SubResource( 18 ) ],
"loop": true,
"name": "normal",
"speed": 5.0
} ]

[node name="FallingPlatform" type="KinematicBody2D"]
motion/sync_to_physics = true
script = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 16 )

[node name="FallTimer" type="Timer" parent="."]
wait_time = 0.45
one_shot = true

[node name="AudioPlayer" parent="." instance=ExtResource( 4 )]

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = SubResource( 21 )
frames = SubResource( 19 )
animation = "normal"

[connection signal="timeout" from="FallTimer" to="." method="_on_FallTimer_timeout"]
